#ifndef ERRORNO_H
#define ERRORNO_H
#define EPERM                          0x40000001
#define ENOENT                         0x40000002 // 文件不存在
// #define ESRCH                          0x40000003
// #define EINTR                          0x40000004
// #define EIO                            0x40000005
// #define ENXIO                          0x40000006
// #define E2BIG                          0x40000007
// #define ENOEXEC                        0x40000008
// #define EBADF                          0x40000009
// #define ECHILD                         0x4000000a
// #define EDEADLK                        0x4000000b
// #define ENOMEM                         0x4000000c
// #define EACCES                         0x4000000d
// #define EFAULT                         0x4000000e
// #define ENOTBLK                        0x4000000f
// #define EBUSY                          0x40000010
// #define EEXIST                         0x40000011
// #define EXDEV                          0x40000012
// #define ENODEV                         0x40000013
// #define ENOTDIR                        0x40000014
// #define EISDIR                         0x40000015
// #define EINVAL                         0x40000016
// #define EMFILE                         0x40000018
// #define ENFILE                         0x40000017
// #define ENOTTY                         0x40000019
// #define ETXTBSY                        0x4000001a
// #define EFBIG                          0x4000001b
// #define ENOSPC                         0x4000001c
// #define ESPIPE                         0x4000001d
// #define EROFS                          0x4000001e
// #define EMLINK                         0x4000001f
// #define EPIPE                          0x40000020
// #define EDOM                           0x40000021
// #define ERANGE                         0x40000022
// #define EAGAIN                         0x40000023
// #define EWOULDBLOCK                    EAGAIN
// #define EINPROGRESS                    0x40000024
// #define EALREADY                       0x40000025
// #define ENOTSOCK                       0x40000026
// #define EMSGSIZE                       0x40000028
// #define EPROTOTYPE                     0x40000029
// #define ENOPROTOOPT                    0x4000002a
// #define EPROTONOSUPPORT                0x4000002b
// #define ESOCKTNOSUPPORT                0x4000002c
// #define EOPNOTSUPP                     0x4000002d
// #define EPFNOSUPPORT                   0x4000002e
// #define EAFNOSUPPORT                   0x4000002f
// #define EADDRINUSE                     0x40000030
// #define EADDRNOTAVAIL                  0x40000031
// #define ENETDOWN                       0x40000032
// #define ENETUNREACH                    0x40000033
// #define ENETRESET                      0x40000034
// #define ECONNABORTED                   0x40000035
// #define ECONNRESET                     0x40000036
// #define ENOBUFS                        0x40000037
// #define EISCONN                        0x40000038
// #define ENOTCONN                       0x40000039
// #define EDESTADDRREQ                   0x40000027
// #define ESHUTDOWN                      0x4000003a
// #define ETOOMANYREFS                   0x4000003b
// #define ETIMEDOUT                      0x4000003c
// #define ECONNREFUSED                   0x4000003d
// #define ELOOP                          0x4000003e
// #define ENAMETOOLONG                   0x4000003f
// #define EHOSTDOWN                      0x40000040
// #define EHOSTUNREACH                   0x40000041
// #define ENOTEMPTY                      0x40000042
// #define EPROCLIM                       0x40000043
// #define EUSERS                         0x40000044
// #define EDQUOT                         0x40000045
// #define ESTALE                         0x40000046
// #define EREMOTE                        0x40000047
// #define EBADRPC                        0x40000048
// #define ERPCMISMATCH                   0x40000049
// #define EPROGUNAVAIL                   0x4000004a
// #define EPROGMISMATCH                  0x4000004b
// #define EPROCUNAVAIL                   0x4000004c
// #define ENOLCK                         0x4000004d
// #define EFTYPE                         0x4000004f
// #define EAUTH                          0x40000050
// #define ENEEDAUTH                      0x40000051
// #define ENOSYS                         0x4000004e
// #define ENOTSUP                        0x40000076
// #define EILSEQ                         0x4000006a
// #define EBACKGROUND                    0x40000064
// #define EDIED                          0x40000065
// #define ED                             0x40000066
// #define EGREGIOUS                      0x40000067
// #define EIEIO                          0x40000068
// #define EGRATUITOUS                    0x40000069
// #define EBADMSG                        0x4000006b
// #define EIDRM                          0x4000006c
// #define EMULTIHOP                      0x4000006d
// #define ENODATA                        0x4000006e
// #define ENOLINK                        0x4000006f
// #define ENOMSG                         0x40000070
// #define ENOSR                          0x40000071
// #define ENOSTR                         0x40000072
// #define EOVERFLOW                      0x40000073
// #define EPROTO                         0x40000074
// #define ETIME                          0x40000075
// #define ECANCELED                      0x40000077
// #define EOWNERDEAD                     0x40000078
// #define ENOTRECOVERABLE                0x40000079

// /* Errors from <mach/message.h>.  */
// #define EMACH_SEND_IN_PROGRESS         0x10000001
// #define EMACH_SEND_INVALID_DATA        0x10000002
// #define EMACH_SEND_INVALID_DEST        0x10000003
// #define EMACH_SEND_TIMED_OUT           0x10000004
// #define EMACH_SEND_WILL_NOTIFY         0x10000005
// #define EMACH_SEND_NOTIFY_IN_PROGRESS  0x10000006
// #define EMACH_SEND_INTERRUPTED         0x10000007
// #define EMACH_SEND_MSG_TOO_SMALL       0x10000008
// #define EMACH_SEND_INVALID_REPLY       0x10000009
// #define EMACH_SEND_INVALID_RIGHT       0x1000000a
// #define EMACH_SEND_INVALID_NOTIFY      0x1000000b
// #define EMACH_SEND_INVALID_MEMORY      0x1000000c
// #define EMACH_SEND_NO_BUFFER           0x1000000d
// #define EMACH_SEND_NO_NOTIFY           0x1000000e
// #define EMACH_SEND_INVALID_TYPE        0x1000000f
// #define EMACH_SEND_INVALID_HEADER      0x10000010
// #define EMACH_RCV_IN_PROGRESS          0x10004001
// #define EMACH_RCV_INVALID_NAME         0x10004002
// #define EMACH_RCV_TIMED_OUT            0x10004003
// #define EMACH_RCV_TOO_LARGE            0x10004004
// #define EMACH_RCV_INTERRUPTED          0x10004005
// #define EMACH_RCV_PORT_CHANGED         0x10004006
// #define EMACH_RCV_INVALID_NOTIFY       0x10004007
// #define EMACH_RCV_INVALID_DATA         0x10004008
// #define EMACH_RCV_PORT_DIED            0x10004009
// #define EMACH_RCV_IN_SET               0x1000400a
// #define EMACH_RCV_HEADER_ERROR         0x1000400b
// #define EMACH_RCV_BODY_ERROR           0x1000400c

// /* Errors from <mach/kern_return.h>.  */
// #define EKERN_INVALID_ADDRESS          1
// #define EKERN_PROTECTION_FAILURE       2
// #define EKERN_NO_SPACE                 3
// #define EKERN_INVALID_ARGUMENT         4
// #define EKERN_FAILURE                  5
// #define EKERN_RESOURCE_SHORTAGE        6
// #define EKERN_NOT_RECEIVER             7
// #define EKERN_NO_ACCESS                8
// #define EKERN_MEMORY_FAILURE           9
// #define EKERN_MEMORY_ERROR             10
// #define EKERN_NOT_IN_SET               12
// #define EKERN_NAME_EXISTS              13
// #define EKERN_ABORTED                  14
// #define EKERN_INVALID_NAME             15
// #define EKERN_INVALID_TASK             16
// #define EKERN_INVALID_RIGHT            17
// #define EKERN_INVALID_VALUE            18
// #define EKERN_UREFS_OVERFLOW           19
// #define EKERN_INVALID_CAPABILITY       20
// #define EKERN_RIGHT_EXISTS             21
// #define EKERN_INVALID_HOST             22
// #define EKERN_MEMORY_PRESENT           23
// #define EKERN_WRITE_PROTECTION_FAILURE 24
// #define EKERN_TERMINATED               26
// #define EKERN_TIMEDOUT                 27
// #define EKERN_INTERRUPTED              28

// /* Errors from <mach/mig_errors.h>.  */
// #define EMIG_TYPE_ERROR                -300
// #define EMIG_REPLY_MISMATCH            -301
// #define EMIG_REMOTE_ERROR              -302
// #define EMIG_BAD_ID                    -303
// #define EMIG_BAD_ARGUMENTS             -304
// #define EMIG_NO_REPLY                  -305
// #define EMIG_EXCEPTION                 -306
// #define EMIG_ARRAY_TOO_LARGE           -307
// #define EMIG_SERVER_DIED               -308
// #define EMIG_DESTROY_REQUEST           -309

// /* Errors from <device/device_types.h>.  */
// #define ED_IO_ERROR                    2500
// #define ED_WOULD_BLOCK                 2501
// #define ED_NO_SUCH_DEVICE              2502
// #define ED_ALREADY_OPEN                2503
// #define ED_DEVICE_DOWN                 2504
// #define ED_INVALID_OPERATION           2505
// #define ED_INVALID_RECNUM              2506
// #define ED_INVALID_SIZE                2507
// #define ED_NO_MEMORY                   2508
// #define ED_READ_ONLY                   2509

// #define _HURD_ERRNOS 122

#endif /* bits/errno.h.  */